name: check-pull-request

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19.5
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1
          args: --timeout 2m
          only-new-issues: true

  scan-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19.5
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check Version
        run: go env GOVERSION
      - name: "Run scanner on new code"
        uses: google/osv-scanner/actions/scanner@main
        with:
          scan-args: |-
            --format=json
            --output=old-results.json
            --lockfile=go.mod
        continue-on-error: false

  deploy-to-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: [golangci, scan-pr]
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only -c infrastructure/development/fly.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_DEVELOPMENT }}
